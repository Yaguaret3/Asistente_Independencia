package interfaces;

import java.sql.*;
import conexion.*;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;

public class Gobernador extends javax.swing.JFrame {

    String ciudad, ActorPolitico1, ActorPolitico2, txtarea = "";
    int BanderaActualizacion = 0, estatus_minimo = 0;
    

    public Gobernador() {
        initComponents();
        setSize(750, 475);
        setResizable(false);
        setLocationRelativeTo(null);
        ciudad = LogIn.ciudad;
        setTitle("Gobernador de la ciudad de " + ciudad);

        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from gobernadores where Ciudad = '" + ciudad + "'");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                ActorPolitico1 = rs.getString("Actor_Politico_1");
                ActorPolitico2 = rs.getString("Actor_Politico_2");
                cmb_actores.addItem(ActorPolitico1);
                cmb_actores.addItem(ActorPolitico2);
                cmb_actores.addItem("Gobierno Nacional");
            }
            cn.close();
        } catch (SQLException e) {
            System.err.println("Error al recibir actores politicos de la ciudad: " + e);
        }

        ActualizarDatos();

    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/IconoAsistenteIndependencia.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtField_Ciudad = new javax.swing.JTextField();
        txtField_Estatus = new javax.swing.JTextField();
        txtField_Caballos = new javax.swing.JTextField();
        txtField_Vacas = new javax.swing.JTextField();
        txtField_Hierro = new javax.swing.JTextField();
        txtField_Vino = new javax.swing.JTextField();
        txtField_Yerba = new javax.swing.JTextField();
        txtField_Industria = new javax.swing.JTextField();
        txtField_MisionComercial = new javax.swing.JTextField();
        txtField_UnidadesReclutadas = new javax.swing.JTextField();
        cmb_cab = new javax.swing.JComboBox<>();
        cmb_vac = new javax.swing.JComboBox<>();
        cmb_hie = new javax.swing.JComboBox<>();
        cmb_vin = new javax.swing.JComboBox<>();
        cmb_yer = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea_CheetSheet = new javax.swing.JTextArea();
        jLabel13 = new javax.swing.JLabel();
        txtField_Intriga = new javax.swing.JTextField();
        cmb_actores = new javax.swing.JComboBox<>();
        jButton_Oficiales = new javax.swing.JButton();
        jButton_Estatus = new javax.swing.JButton();
        jButton_Industria = new javax.swing.JButton();
        jButton_MisionComercial = new javax.swing.JButton();
        jButton_Unidades = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtField_Oficiales = new javax.swing.JTextField();
        jButton_Intriga = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        cmb_Ciudad_Destino = new javax.swing.JComboBox<>();
        jButton_Enviar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea_Intercambio = new javax.swing.JTextArea();
        jLabel_Turno = new javax.swing.JLabel();
        jButton_Actualizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Independencia: el Megajuego!");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, -1, -1));

        jLabel2.setText("Ciudad");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, -1));

        jLabel3.setText("Estatus");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 100, -1, -1));

        jLabel4.setText("Caballos");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, -1));

        jLabel5.setText("Vacas");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 40, -1, -1));

        jLabel6.setText("Hierro");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 40, -1, -1));

        jLabel7.setText("Vino");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 40, -1, -1));

        jLabel8.setText("Yerba");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 40, -1, -1));

        jLabel9.setText("Nivel de Industria");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 140, -1, -1));

        jLabel10.setText(" Misión Comercial");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 140, -1, -1));

        jLabel12.setText("Unidades Reclutadas");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, -1, -1));

        txtField_Ciudad.setEnabled(false);
        getContentPane().add(txtField_Ciudad, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 85, -1));

        txtField_Estatus.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Estatus.setEnabled(false);
        getContentPane().add(txtField_Estatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 60, -1));

        txtField_Caballos.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Caballos.setEnabled(false);
        getContentPane().add(txtField_Caballos, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 60, 60, -1));

        txtField_Vacas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Vacas.setEnabled(false);
        getContentPane().add(txtField_Vacas, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 60, 60, -1));

        txtField_Hierro.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Hierro.setEnabled(false);
        getContentPane().add(txtField_Hierro, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 60, 60, -1));

        txtField_Vino.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Vino.setEnabled(false);
        getContentPane().add(txtField_Vino, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 60, 60, -1));

        txtField_Yerba.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Yerba.setEnabled(false);
        getContentPane().add(txtField_Yerba, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 60, 60, -1));

        txtField_Industria.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Industria.setEnabled(false);
        getContentPane().add(txtField_Industria, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 160, 60, -1));

        txtField_MisionComercial.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_MisionComercial.setEnabled(false);
        getContentPane().add(txtField_MisionComercial, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 160, 60, -1));

        txtField_UnidadesReclutadas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_UnidadesReclutadas.setEnabled(false);
        getContentPane().add(txtField_UnidadesReclutadas, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 160, 60, -1));

        cmb_cab.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        getContentPane().add(cmb_cab, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 90, 60, -1));

        cmb_vac.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        getContentPane().add(cmb_vac, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 90, 60, -1));

        cmb_hie.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        getContentPane().add(cmb_hie, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, 60, -1));

        cmb_vin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        getContentPane().add(cmb_vin, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 90, 60, -1));

        cmb_yer.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "0", "1" }));
        getContentPane().add(cmb_yer, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 90, 60, -1));

        jScrollPane1.setEnabled(false);

        jTextArea_CheetSheet.setEditable(false);
        jTextArea_CheetSheet.setColumns(20);
        jTextArea_CheetSheet.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jTextArea_CheetSheet.setRows(5);
        jTextArea_CheetSheet.setText("Para crecer y mejorar en 1 el ESTATUS de tu ciudad, debés elegir un\nActor Político en el cual apoyarte. El primero de ellos  te cobrará 1\nrecurso, el segundo te cobrará 2 recursos diferentes y el Gobierno Na-\ncional te cobrará 3 recursos diferentes.\n\nPara aumentar el Nivel de tu INDUSTRIA, tenés que alcanzar primero un\nEstatus de nivel \"\", y luego invertir 2 recursos diferentes en ello. En\ncada turno siguiente recibirás 2 recursos de tu producción en lugar\nde 1.\n\nPara aumentar el Nivel de tu MISIÓN COMERCIAL, tenés que invertir\n1 recurso cualquiera. El nivel de la misión no puede ser mayor al de tu\nestatus. En caso de disputa civil por un recurso del mapa (es decir: si \nno hay ejércitos que intervengan), la misión comercial de mayor nivel\nconsigue el recurso.\n\nPara reclutar UNIDADES debes invertir 1 recurso. Tu capitán recibirá 3\nunidades. Las unidades le permitirán mantenerse en campaña. \n\nPara reclutar OFICIALES de nivel 2, debés invertir 2 recursos diferentes.\nPara reclutar oficiales de nivel 3, debés invertir 3 recursos diferentes. ");
        jTextArea_CheetSheet.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea_CheetSheet);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 236, 360, 180));

        jLabel13.setText("Oficiales Reclutados");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 140, -1, -1));

        txtField_Intriga.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Intriga.setEnabled(false);
        getContentPane().add(txtField_Intriga, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 50, 60, -1));

        getContentPane().add(cmb_actores, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 150, 150, -1));

        jButton_Oficiales.setText("Reclutar");
        jButton_Oficiales.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_OficialesActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Oficiales, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 200, -1, -1));

        jButton_Estatus.setText("Crecer");
        jButton_Estatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EstatusActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Estatus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 180, -1, -1));

        jButton_Industria.setText("Invertir");
        jButton_Industria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_IndustriaActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Industria, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 200, -1, -1));

        jButton_MisionComercial.setText("Invertir");
        jButton_MisionComercial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_MisionComercialActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_MisionComercial, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, -1, -1));

        jButton_Unidades.setText("Reclutar");
        jButton_Unidades.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_UnidadesActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Unidades, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 200, -1, -1));

        jLabel11.setText("Intriga");
        jLabel11.setEnabled(false);
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 30, -1, -1));

        txtField_Oficiales.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtField_Oficiales.setEnabled(false);
        getContentPane().add(txtField_Oficiales, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 160, 60, -1));

        jButton_Intriga.setText("Gastar");
        jButton_Intriga.setEnabled(false);
        getContentPane().add(jButton_Intriga, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 90, -1, -1));

        jLabel14.setText("Comerciar con:");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 80, -1));

        cmb_Ciudad_Destino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Buenos Aires", "Montevideo", "Asunción", "Santa Fé", "Córdoba", "Mendoza", "Tucumán", "Salta", "Potosí", "La Paz" }));
        getContentPane().add(cmb_Ciudad_Destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 310, 110, -1));

        jButton_Enviar.setText("Enviar");
        jButton_Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EnviarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Enviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, 80, -1));

        jTextArea_Intercambio.setColumns(20);
        jTextArea_Intercambio.setRows(5);
        jTextArea_Intercambio.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea_Intercambio);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 236, 230, 180));
        getContentPane().add(jLabel_Turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, -1, -1));

        jButton_Actualizar.setText("Actualizar");
        jButton_Actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_UnidadesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_UnidadesActionPerformed

        try {
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }

            if (BanderaActualizacion == 1) {
                if ("1".equals(cmb_cab.getSelectedItem().toString())) {

                    try {
                        Connection cn = Conexion.conectar();

                        PreparedStatement pst1 = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                        ResultSet rs = pst1.executeQuery();
                        int cab = 0, uni = 0;

                        while (rs.next()) {
                            cab = rs.getInt("Caballos");
                            uni = rs.getInt("Unidades_Reclutadas");
                        }

                        PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, Unidades_Reclutadas = ? where Ciudad = '" + ciudad + "'");

                        if (cab > 0) {
                            pst.setInt(1, cab - 1);
                            pst.setInt(2, uni + 3);
                            pst.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes caballos");
                        }
                        cn.close();

                    } catch (NumberFormatException | SQLException e) {
                        System.err.println("Error al actualizar Caballos y Unidades: " + e);
                    }
                } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {

                    try {
                        Connection cn = Conexion.conectar();

                        PreparedStatement pst1 = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                        ResultSet rs = pst1.executeQuery();
                        int vac = 0, uni = 0;

                        while (rs.next()) {
                            vac = rs.getInt("Vacas");
                            uni = rs.getInt("Unidades_Reclutadas");
                        }

                        PreparedStatement pst = cn.prepareStatement("update gobernadores set Vacas = ?, Unidades_Reclutadas = ? where Ciudad = '" + ciudad + "'");

                        if (vac > 0) {
                            pst.setInt(1, vac - 1);
                            pst.setInt(2, uni + 3);
                            pst.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes vacas");
                        }
                        cn.close();

                    } catch (NumberFormatException | SQLException e) {
                        System.err.println("Error al actualizar Vacas y Unidades: " + e);
                    }
                } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {

                    try {
                        Connection cn = Conexion.conectar();

                        PreparedStatement pst1 = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                        ResultSet rs = pst1.executeQuery();
                        int hie = 0, uni = 0;

                        while (rs.next()) {
                            hie = rs.getInt("Hierro");
                            uni = rs.getInt("Unidades_Reclutadas");
                        }

                        PreparedStatement pst = cn.prepareStatement("update gobernadores set Hierro = ?, Unidades_Reclutadas = ? "
                                + "where Ciudad = '" + ciudad + "'");

                        if (hie > 0) {
                            pst.setInt(1, hie - 1);
                            pst.setInt(2, uni + 3);
                            pst.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficiente hierro");
                        }
                        cn.close();

                    } catch (NumberFormatException | SQLException e) {
                        System.err.println("Error al actualizar Hierro y Unidades: " + e);
                    }
                } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {

                    try {
                        Connection cn = Conexion.conectar();

                        PreparedStatement pst1 = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                        ResultSet rs = pst1.executeQuery();
                        int vin = 0, uni = 0;

                        while (rs.next()) {
                            vin = rs.getInt("Vino");
                            uni = rs.getInt("Unidades_Reclutadas");
                        }

                        PreparedStatement pst = cn.prepareStatement("update gobernadores set Vino = ?, Unidades_Reclutadas = ? "
                                + "where Ciudad = '" + ciudad + "'");

                        if (vin > 0) {
                            pst.setInt(1, vin - 1);
                            pst.setInt(2, uni + 3);
                            pst.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficiente vino");
                        }
                        cn.close();

                    } catch (NumberFormatException | SQLException e) {
                        System.err.println("Error al actualizar Vino y Unidades" + e);
                    }
                } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                    try {
                        Connection cn = Conexion.conectar();

                        PreparedStatement pst1 = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                        ResultSet rs = pst1.executeQuery();
                        int yer = 0, uni = 0;

                        while (rs.next()) {
                            yer = rs.getInt("Yerba");
                            uni = rs.getInt("Unidades_Reclutadas");
                        }

                        PreparedStatement pst = cn.prepareStatement("update gobernadores set Yerba = ?, Unidades_Reclutadas = ? "
                                + "where Ciudad = '" + ciudad + "'");

                        if (yer > 0) {
                            pst.setInt(1, yer - 1);
                            pst.setInt(2, uni + 3);
                            pst.executeUpdate();
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficiente yerba");
                        }
                        cn.close();

                    } catch (NumberFormatException | SQLException e) {
                        System.err.println("Error al actualizar Yerba y Unidades: " + e);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Asigna un recurso");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El juego está pausado");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al contactar bandera de pausa");
        }
        ActualizarDatos();

    }//GEN-LAST:event_jButton_UnidadesActionPerformed

    private void jButton_MisionComercialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_MisionComercialActionPerformed

        int cab = 0, vac = 0, hie = 0, vin = 0, yer = 0, mis = 0, est = 0;
        try {
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }

            if (BanderaActualizacion == 1) {
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement(
                            "select * from gobernadores where Ciudad = '" + ciudad + "'");
                    ResultSet rs = pst.executeQuery();

                    while (rs.next()) {
                        cab = rs.getInt("Caballos");
                        vac = rs.getInt("Vacas");
                        hie = rs.getInt("Hierro");
                        vin = rs.getInt("Vino");
                        yer = rs.getInt("Yerba");
                        mis = rs.getInt("Nivel_de_Mision_Comercial");
                        est = rs.getInt("Estatus");
                    }
                    cn.close();
                } catch (SQLException e) {
                    System.err.println("Error al tomar datos para comparar (Misión Comercial)");
                }

                if (mis < est) {

                    if ("1".equals(cmb_cab.getSelectedItem().toString())) {

                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, "
                                    + "Nivel_de_Mision_Comercial = ? where Ciudad = '" + ciudad + "'");

                            if (cab > 0) {
                                pst.setInt(1, cab - 1);
                                pst.setInt(2, mis + 1);
                                pst.executeUpdate();
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                            cn.close();

                        } catch (NumberFormatException | SQLException e) {
                            System.err.println("Error al actualizar Caballos y Mision: " + e);
                        }
                    } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {

                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("update gobernadores set Vacas = ?, "
                                    + "Nivel_de_Mision_Comercial = ? where Ciudad = '" + ciudad + "'");

                            if (vac > 0) {
                                pst.setInt(1, vac - 1);
                                pst.setInt(2, mis + 1);
                                pst.executeUpdate();
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                            cn.close();

                        } catch (NumberFormatException | SQLException e) {
                            System.err.println("Error al actualizar Vacas y Misión: " + e);
                        }
                    } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {

                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("update gobernadores set Hierro = ?, "
                                    + "Nivel_de_Mision_Comercial = ? where Ciudad = '" + ciudad + "'");

                            if (hie > 0) {
                                pst.setInt(1, hie - 1);
                                pst.setInt(2, mis + 1);
                                pst.executeUpdate();
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                            cn.close();

                        } catch (NumberFormatException | SQLException e) {
                            System.err.println("Error al actualizar Hierro y Misión");
                        }
                    } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {

                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("update gobernadores set Vino = ?, "
                                    + "Nivel_de_Mision_Comercial = ? where Ciudad = '" + ciudad + "'");

                            if (vin > 0) {
                                pst.setInt(1, vin - 1);
                                pst.setInt(2, mis + 1);
                                pst.executeUpdate();
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                            cn.close();

                        } catch (NumberFormatException | SQLException exc) {
                        }
                    } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                        try {
                            Connection cn = Conexion.conectar();
                            PreparedStatement pst = cn.prepareStatement("update gobernadores set Yerba = ?, "
                                    + "Nivel_de_Mision_Comercial = ? where Ciudad = '" + ciudad + "'");

                            if (yer > 0) {
                                pst.setInt(1, yer - 1);
                                pst.setInt(2, mis + 1);
                                pst.executeUpdate();
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                            cn.close();

                        } catch (NumberFormatException | SQLException e) {
                            System.err.println("Error al actualizar Yerba y Misión");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Asigna un recurso");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "El nivel de misión comercial no puede superar el nivel de estatus.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El juego está pausado");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al contactar con bandera de pausa: " + e);
        }
        ActualizarDatos();

    }//GEN-LAST:event_jButton_MisionComercialActionPerformed

    private void jButton_IndustriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_IndustriaActionPerformed

        int est = 0, cab = 0, vac = 0, hie = 0, vin = 0, yer = 0, ind = 0;
        try {
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }

            if (BanderaActualizacion == 1) {
                try {
                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement("select * from gobernadores where Ciudad = '" + ciudad + "'");
                    ResultSet rs = pst.executeQuery();

                    while (rs.next()) {
                        est = rs.getInt("Estatus");
                        cab = rs.getInt("Caballos");
                        vac = rs.getInt("Vacas");
                        hie = rs.getInt("Hierro");
                        vin = rs.getInt("Vino");
                        yer = rs.getInt("Yerba");
                        ind = rs.getInt("Nivel_de_Industria");
                    }
                    cn.close();

                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn2.prepareStatement(
                            "select * from otros where ID = 1");
                    ResultSet rs2 = pst2.executeQuery();

                    while (rs2.next()) {
                        estatus_minimo = rs2.getInt("Estatus_Industria");
                    }
                    cn2.close();

                } catch (NumberFormatException | SQLException e) {
                    System.err.println("Error al recibir datos para Industria: " + e);
                }

                if (ind < 2) {
                    if (est >= estatus_minimo) {
                        if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                            if ("1".equals(cmb_vac.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, "
                                            + "Vacas = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (cab > 0 && vac > 0) {
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vac - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();
                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, "
                                            + "Hierro = ?, Nivel_de_Industria where Ciudad = '" + ciudad + "'");

                                    if (cab > 0 && hie > 0) {
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Hierro e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, "
                                            + "Vino = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (cab > 0 && vin > 0) {
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vin - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vino e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Caballos = ?, "
                                            + "Yerba = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (cab > 0 && yer < 0) {
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, yer - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Yerba e Industria");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes");
                            }

                        } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                            if ("1".equals(cmb_hie.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Vacas = ?, "
                                            + "Hierro = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (vac > 0 && hie > 0) {
                                        pst.setInt(1, vac - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Hierro e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Vacas = ?, "
                                            + "Vino = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (vac > 0 && vin > 0) {
                                        pst.setInt(1, vac - 1);
                                        pst.setInt(2, vin - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Vino e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Vacas = ?, "
                                            + "Yerba = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (vac > 0 && yer > 0) {
                                        pst.setInt(1, vac - 1);
                                        pst.setInt(2, yer - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Yerba e Industria");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes");
                            }

                        } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                            if ("1".equals(cmb_vin.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Hierro = ?, "
                                            + "Vino = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (hie > 0 && vin > 0) {
                                        pst.setInt(1, hie - 1);
                                        pst.setInt(2, vin - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Hierro, Vino e Industria: " + e);
                                }
                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Hierro = ?, "
                                            + "Yerba = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (hie > 0 && yer > 0) {
                                        pst.setInt(1, hie - 1);
                                        pst.setInt(2, yer - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Hierro, Yerba e Industria: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes");
                            }

                        } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                            if ("1".equals(cmb_yer.getSelectedItem().toString())) {

                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement("update gobernadores set Vino = ?, "
                                            + "Yerba = ?, Nivel_de_Industria = ? where Ciudad = '" + ciudad + "'");

                                    if (vin > 0 && yer > 0) {
                                        pst.setInt(1, vin - 1);
                                        pst.setInt(2, yer - 1);
                                        pst.setInt(3, ind + 1);
                                        pst.executeUpdate();
                                    } else {
                                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                    }
                                    cn.close();

                                } catch (NumberFormatException | SQLException e) {
                                    System.err.println("Error al actualizar Vino, Yerba e Industria");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Para mejorar la industria, crecé hasta nivel " + estatus_minimo + " de estatus");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "La industria ya produce al máximo. No se puede mejorar.");
                }
            } else {
                JOptionPane.showMessageDialog(null, "El juego está pausado");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al contactar con bandera de pausa: " + e);
        }

        ActualizarDatos();

    }//GEN-LAST:event_jButton_IndustriaActionPerformed

    private void jButton_EstatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EstatusActionPerformed

        int est = 0, cab = 0, vac = 0, hie = 0, vin = 0, yer = 0, act1 = 0, act2 = 0, gobnac = 0;

        try {
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }

            if (BanderaActualizacion == 1) {
                try {

                    Connection cn = Conexion.conectar();
                    PreparedStatement pst = cn.prepareStatement(
                            "select * from gobernadores where Ciudad = '" + ciudad + "'");
                    ResultSet rs = pst.executeQuery();

                    while (rs.next()) {
                        est = rs.getInt("Estatus");
                        cab = rs.getInt("Caballos");
                        vac = rs.getInt("Vacas");
                        hie = rs.getInt("Hierro");
                        vin = rs.getInt("Vino");
                        yer = rs.getInt("Yerba");
                    }
                    
                    Connection cn2 = Conexion.conectar();
                    PreparedStatement pst2 = cn.prepareStatement(
                            "select * from actorespoliticos where ID = 1");
                    ResultSet rs2 = pst2.executeQuery();

                    while (rs2.next()) {
                        act1 = rs2.getInt(ActorPolitico1);
                        act2 = rs2.getInt(ActorPolitico2);
                        gobnac = rs2.getInt("Gobierno_Nacional");
                    }

                    cn.close();
                    cn2.close();

                } catch (SQLException e) {
                    System.err.println("Error al tomar datos para Estatus: " + e);
                }
                //Actor Político 1
                if (cmb_actores.getSelectedItem().toString().equals(ActorPolitico1)) {
                    if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                        if (cab > 0) {
                            try {
                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                        "update gobernadores set Caballos = ?, Estatus = ? where Ciudad = '" + ciudad + "'");

                                pst.setInt(1, cab - 1);
                                pst.setInt(2, est + 1);
                                pst.executeUpdate();

                                Connection cn2 = Conexion.conectar();
                                PreparedStatement pst2 = cn2.prepareStatement(
                                        "update actorespoliticos set " + ActorPolitico1 + " = ? where ID = 1");

                                pst2.setInt(1, act1 + 1);
                                pst2.executeUpdate();

                                cn.close();
                                cn2.close();

                            } catch (SQLException e) {
                                System.err.println("Error al actualizar Caballos, Estatus y Actor1" + e);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                        }

                    } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                        if (vac > 0) {
                            try {
                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                        "update gobernadores set Vacas = ?, Estatus = ? where Ciudad = '" + ciudad + "'");

                                pst.setInt(1, vac - 1);
                                pst.setInt(2, est + 1);
                                pst.executeUpdate();

                                Connection cn2 = Conexion.conectar();
                                PreparedStatement pst2 = cn2.prepareStatement(
                                        "update actorespoliticos set " + ActorPolitico1 + " = ? where ID = 1");

                                pst2.setInt(1, act1 + 1);
                                pst2.executeUpdate();

                                cn.close();
                                cn2.close();

                            } catch (SQLException e) {
                                System.err.println("Error al actualizar Vacas, Estatus y Actor1: " + e);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                        }
                    } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                        if (hie > 0) {
                            try {
                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                        "update gobernadores set Hierro = ?, Estatus = ? where Ciudad = '" + ciudad + "'");

                                pst.setInt(1, hie - 1);
                                pst.setInt(2, est + 1);
                                pst.executeUpdate();

                                Connection cn2 = Conexion.conectar();
                                PreparedStatement pst2 = cn2.prepareStatement(
                                        "update actorespoliticos set " + ActorPolitico1 + " = ? where ID = 1");

                                pst2.setInt(1, act1 + 1);
                                pst2.executeUpdate();

                                cn.close();
                                cn2.close();

                            } catch (SQLException e) {
                                System.err.println("Error al actualizar Hierro, Estatus y Actor1: " + e);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");

                        }
                    } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                        if (vin > 0) {
                            try {
                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                        "update gobernadores set Vino = ?, Estatus = ? where Ciudad = '" + ciudad + "'");

                                pst.setInt(1, vin - 1);
                                pst.setInt(2, est + 1);
                                pst.executeUpdate();

                                Connection cn2 = Conexion.conectar();
                                PreparedStatement pst2 = cn2.prepareStatement(
                                        "update actorespoliticos set " + ActorPolitico1 + " = ? where ID = 1");

                                pst2.setInt(1, act1 + 1);
                                pst2.executeUpdate();

                                cn.close();
                                cn2.close();

                            } catch (SQLException e) {
                                System.err.println("Error al actualizar Vino, Estatus y Actor1: " + e);
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                        }
                    } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                        if (yer > 0) {
                            try {
                                Connection cn = Conexion.conectar();
                                PreparedStatement pst = cn.prepareStatement(
                                        "update gobernadores set Yerba = ?, Estatus = ? where Ciudad = '" + ciudad + "'");

                                pst.setInt(1, yer - 1);
                                pst.setInt(2, est + 1);
                                pst.executeUpdate();

                                Connection cn2 = Conexion.conectar();
                                PreparedStatement pst2 = cn2.prepareStatement(
                                        "update actorespoliticos set " + ActorPolitico1 + " = ? where ID = 1");

                                pst2.setInt(1, act1 + 1);
                                pst2.executeUpdate();

                                cn.close();
                                cn2.close();

                            } catch (SQLException e) {
                                System.err.println("Error al actualizar Caballos, Estatus y Actor1");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Asigna un recurso para crecer apoyado por este Actor Político");
                    }
                }
                //Actor Político 2
                if (ActorPolitico2.equals(cmb_actores.getSelectedItem().toString())) {
                    if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                        if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                            if (cab > 0 && vac > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Caballos = ?, Vacas = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, cab - 1);
                                    pst.setInt(2, vac - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                            if (cab > 0 && hie > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Caballos = ?, Hierro = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, cab - 1);
                                    pst.setInt(2, hie - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                            if (cab > 0 && vin > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Caballos = ?, Vino = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, cab - 1);
                                    pst.setInt(2, vin - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (cab > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Caballos = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, cab - 1);
                                    pst.setInt(2, yer - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes para crecer apoyado por este Actor Político");
                        }
                    } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                        if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                            if (vac > 0 && hie > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Vacas = ?, Hierro = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, vac - 1);
                                    pst.setInt(2, hie - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set '" + ActorPolitico2 + "' = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Hierro, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                            if (vac > 0 && vin > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Vacas = ?, Vino = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, vac - 1);
                                    pst.setInt(2, vin - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Vino, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (vac > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Vacas = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, vac - 1);
                                    pst.setInt(2, yer - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Yerba, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes para crecer apoyado por este Actor Político");
                        }

                    } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                        if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                            if (hie > 0 && vin > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Hierro = ?, Vino = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, hie - 1);
                                    pst.setInt(2, vin - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Hierro, Vino, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (hie > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Hierro = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, hie - 1);
                                    pst.setInt(2, yer - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Hierro, Yerba y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes para crecer apoyado por este Actor Político");
                        }
                    } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                        if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (vin > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Vino = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, vin - 1);
                                    pst.setInt(2, yer - 1);
                                    pst.setInt(3, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set " + ActorPolitico2 + " = ? where ID = 1");

                                    pst2.setInt(1, act2 + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Caballos, Vacas, Estatus y Actor2: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes para crecer apoyado por este Actor Político");
                        }

                    } else {
                        JOptionPane.showMessageDialog(null, "Asigna dos recursos diferentes para crecer apoyado por este Actor Político");
                    }
                }
                //Actor Político 3
                if ("Gobierno Nacional".equals(cmb_actores.getSelectedItem().toString())) {
                    if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                        if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                            if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                                if (cab > 0 && vac > 0 && hie > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Vacas = ?, Hierro = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vac - 1);
                                        pst.setInt(3, hie - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Vacas, Hierro, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }
                            } else if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                                if (cab > 0 && vac > 0 && vin > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Vacas = ?, Vino = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vac - 1);
                                        pst.setInt(3, vin - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Vacas, Vino, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }
                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                                if (cab > 0 && vac > 0 && yer > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Vacas = ?, Yerba = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vac - 1);
                                        pst.setInt(3, yer - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Vacas, Yerba, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                            }
                        } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                            if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                                if (cab > 0 && hie > 0 && vin > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Hierro = ?, Vino = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, vin - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Hierro, Vino, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }

                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                                if (cab > 0 && hie > 0 && yer > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Hierro = ?, Yerba = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, yer - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Hierro, , Yerba, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }

                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                            }
                        } else if ("1".equals(cmb_vin.getSelectedItem().toString()) && "1".equals(cmb_yer.getSelectedItem().toString())) {
                            
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Caballos = ?, Vino = ?, Yerba = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, cab - 1);
                                        pst.setInt(2, vin - 1);
                                        pst.setInt(3, yer - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Caballos, Vino, , Yerba, Estatus y Gobierno Nacional: " + e);
                                    }
                                
                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                        }

                    } else if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                        if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                            if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                                if (vac > 0 && hie > 0 && vin > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Vacas = ?, Hierro = ?, Vino = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, vac - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, vin - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Vacas, Hierro, Vino, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }

                            } else if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                                if (vac > 0 && hie > 0 && yer > 0) {
                                    try {
                                        Connection cn = Conexion.conectar();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "update gobernadores set Vacas = ?, Hierro = ?, Yerba = ?, Estatus = ? "
                                                + "where Ciudad = '" + ciudad + "'");
                                        pst.setInt(1, vac - 1);
                                        pst.setInt(2, hie - 1);
                                        pst.setInt(3, yer - 1);
                                        pst.setInt(4, est + 1);
                                        pst.executeUpdate();

                                        Connection cn2 = Conexion.conectar();
                                        PreparedStatement pst2 = cn.prepareStatement(
                                                "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                        pst2.setInt(1, gobnac + 1);
                                        pst2.executeUpdate();

                                        cn.close();
                                        cn2.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al actualizar Vacas, Hierro, Yerba, Estatus y Gobierno Nacional: " + e);
                                    }
                                } else {
                                    JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                            }
                        } else if ("1".equals(cmb_vin.getSelectedItem().toString()) && "1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (vac > 0 && vin > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Vacas = ?, Vino = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, vac - 1);
                                    pst.setInt(2, vin - 1);
                                    pst.setInt(3, yer - 1);
                                    pst.setInt(4, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                    pst2.setInt(1, gobnac + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Vacas, Vino, Yerba, Estatus y Gobierno Nacional: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                        }

                    } else if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                        if ("1".equals(cmb_vin.getSelectedItem().toString()) && "1".equals(cmb_yer.getSelectedItem().toString())) {
                            if (hie > 0 && vin > 0 && yer > 0) {
                                try {
                                    Connection cn = Conexion.conectar();
                                    PreparedStatement pst = cn.prepareStatement(
                                            "update gobernadores set Hierro = ?, Vino = ?, Yerba = ?, Estatus = ? "
                                            + "where Ciudad = '" + ciudad + "'");
                                    pst.setInt(1, hie - 1);
                                    pst.setInt(2, vin - 1);
                                    pst.setInt(3, yer - 1);
                                    pst.setInt(4, est + 1);
                                    pst.executeUpdate();

                                    Connection cn2 = Conexion.conectar();
                                    PreparedStatement pst2 = cn.prepareStatement(
                                            "update actorespoliticos set Gobierno_Nacional = ? where ID = 1");

                                    pst2.setInt(1, gobnac + 1);
                                    pst2.executeUpdate();

                                    cn.close();
                                    cn2.close();

                                } catch (SQLException e) {
                                    System.err.println("Error al actualizar Hierro, Vino, Yerba, Estatus y Gobierno Nacional: " + e);
                                }
                            } else {
                                JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                            }

                        } else {
                            JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                        }
                    } else {
                        JOptionPane.showMessageDialog(null, "Asigna tres recursos diferentes para crecer apoyado por este Actor Político");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "El juego está pausado");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al buscar bandera de pausa del juego: " + e);
        }
        ActualizarDatos();

    }//GEN-LAST:event_jButton_EstatusActionPerformed

    private void jButton_OficialesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_OficialesActionPerformed

        try {
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }
            if (BanderaActualizacion == 1) {
                JOptionPane.showMessageDialog(null, "Contacta con Control Ciudades");
            } else {
                JOptionPane.showMessageDialog(null, "El juego está pausado");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al contactar con bandera de pausa");
        }
    }//GEN-LAST:event_jButton_OficialesActionPerformed

    private void jButton_EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EnviarActionPerformed
        String ciudad_destino = "";
        ciudad_destino = cmb_Ciudad_Destino.getSelectedItem().toString();
        int cab = 0, vac = 0, hie = 0, vin = 0, yer = 0;
        int cab_d = 0, vac_d = 0, hie_d = 0, vin_d = 0, yer_d = 0;
        // Banderas:
        int cab_env = 0, vac_env = 0, hie_env = 0, vin_env = 0, yer_env = 0;

        //Paso 1. Recibir recursos previos del emisor.
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from gobernadores where Ciudad = '" + ciudad + "'");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                cab = rs.getInt("Caballos");
                vac = rs.getInt("Vacas");
                hie = rs.getInt("Hierro");
                vin = rs.getInt("Vino");
                yer = rs.getInt("Yerba");
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al recibir datos para comerciar: " + e);
        }

        try {
            //Paso 2. Bandera
            Connection cn10 = Conexion.conectar();
            PreparedStatement pst10 = cn10.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs10 = pst10.executeQuery();

            while (rs10.next()) {
                BanderaActualizacion = rs10.getInt("Bandera_Pausa_Ciudad");
            }
            cn10.close();
        } catch (SQLException e) {
            System.err.println("Error al contactar con bandera pausa: " + e);
        }

        if (BanderaActualizacion == 1) {
            //Paso 3. Gasto de recursos del emisor
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "update gobernadores set Caballos = ?, Vacas = ?, Hierro = ?, Vino = ?, Yerba = ? "
                        + "where Ciudad = '" + ciudad + "'");
                if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                    if (cab > 0) {
                        cab = cab - 1;
                        pst.setInt(1, cab);
                        pst.setInt(2, vac);
                        pst.setInt(3, hie);
                        pst.setInt(4, vin);
                        pst.setInt(5, yer);
                        pst.executeUpdate();
                        cab_env = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                    }
                }
                if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                    if (vac > 0) {
                        vac = vac - 1;
                        pst.setInt(1, cab);
                        pst.setInt(2, vac);
                        pst.setInt(3, hie);
                        pst.setInt(4, vin);
                        pst.setInt(5, yer);
                        pst.executeUpdate();
                        vac_env = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                    }
                }
                if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                    if (hie > 0) {
                        hie = hie - 1;
                        pst.setInt(1, cab);
                        pst.setInt(2, vac);
                        pst.setInt(3, hie);
                        pst.setInt(4, vin);
                        pst.setInt(5, yer);
                        pst.executeUpdate();
                        hie_env = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                    }
                }
                if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                    if (vin > 0) {
                        vin = vin - 1;
                        pst.setInt(1, cab);
                        pst.setInt(2, vac);
                        pst.setInt(3, hie);
                        pst.setInt(4, vin);
                        pst.setInt(5, yer);
                        pst.executeUpdate();
                        vin_env = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                    }
                }
                if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                    if (yer > 0) {
                        yer = yer - 1;
                        pst.setInt(1, cab);
                        pst.setInt(2, vac);
                        pst.setInt(3, hie);
                        pst.setInt(4, vin);
                        pst.setInt(5, yer);
                        pst.executeUpdate();
                        yer_env = 1;
                    } else {
                        JOptionPane.showMessageDialog(null, "No tenés suficientes recursos");
                    }
                }
                cn.close();
            } catch (SQLException e) {
                System.err.println("Error al gastar recursos al intercambiar: " + e);
            }

            //Paso 4. Recibir recursos previos del destinatario.
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select * from gobernadores where Ciudad = '" + ciudad_destino + "'");
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    cab_d = rs.getInt("Caballos");
                    vac_d = rs.getInt("Vacas");
                    hie_d = rs.getInt("Hierro");
                    vin_d = rs.getInt("Vino");
                    yer_d = rs.getInt("Yerba");
                }
                cn.close();

            } catch (SQLException e) {
                System.err.println("Error al recibir datos para comerciar: " + e);
            }

            //Paso 5. Recibir turno actual
            int turno = 0;
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "select * from otros where ID = 1");
                ResultSet rs = pst.executeQuery();

                while (rs.next()) {
                    turno = rs.getInt("Turno");
                }
                cn.close();

            } catch (SQLException e) {
                System.err.println("Error al recibir datos para comerciar: " + e);
            }
            
            
            //Paso 6. El destinatario recibe recursos.
            try {
                Connection cn = Conexion.conectar();
                PreparedStatement pst = cn.prepareStatement(
                        "update gobernadores set Caballos = ?, Vacas = ?, Hierro = ?, Vino = ?, Yerba = ? "
                        + "where Ciudad = '" + ciudad_destino + "'");
                if ("1".equals(cmb_cab.getSelectedItem().toString())) {
                    if (cab_env == 1) {
                        cab_d = cab_d + 1;
                        pst.setInt(1, cab_d);
                        pst.setInt(2, vac_d);
                        pst.setInt(3, hie_d);
                        pst.setInt(4, vin_d);
                        pst.setInt(5, yer_d);
                        pst.executeUpdate();
                        txtarea = txtarea + "Turno " + turno + ": Enviaste 1 Caballos a " + ciudad_destino + "\n";
                    } else {
                    }
                }
                if ("1".equals(cmb_vac.getSelectedItem().toString())) {
                    if (vac_env == 1) {
                        vac_d = vac_d + 1;
                        pst.setInt(1, cab_d);
                        pst.setInt(2, vac_d);
                        pst.setInt(3, hie_d);
                        pst.setInt(4, vin_d);
                        pst.setInt(5, yer_d);
                        pst.executeUpdate();
                        txtarea = txtarea + "Turno " + turno + ": Enviaste 1 Vacas a " + ciudad_destino + "\n";
                    } else {
                    }
                }
                if ("1".equals(cmb_hie.getSelectedItem().toString())) {
                    if (hie_env == 1) {
                        hie_d = hie_d + 1;
                        pst.setInt(1, cab_d);
                        pst.setInt(2, vac_d);
                        pst.setInt(3, hie_d);
                        pst.setInt(4, vin_d);
                        pst.setInt(5, yer_d);
                        pst.executeUpdate();
                        txtarea = txtarea + "Turno :" + turno + ": Enviaste 1 Hierro a " + ciudad_destino + "\n";
                    } else {
                    }
                }
                if ("1".equals(cmb_vin.getSelectedItem().toString())) {
                    if (vin_env == 1) {
                        vin_d = vin_d + 1;
                        pst.setInt(1, cab_d);
                        pst.setInt(2, vac_d);
                        pst.setInt(3, hie_d);
                        pst.setInt(4, vin_d);
                        pst.setInt(5, yer_d);
                        pst.executeUpdate();
                        txtarea = txtarea + "Turno " + turno + ": Enviaste 1 Vino a " + ciudad_destino + "\n";
                    } else {
                    }
                }
                if ("1".equals(cmb_yer.getSelectedItem().toString())) {
                    if (yer_env == 1) {
                        yer_d = yer_d + 1;
                        pst.setInt(1, cab_d);
                        pst.setInt(2, vac_d);
                        pst.setInt(3, hie_d);
                        pst.setInt(4, vin_d);
                        pst.setInt(5, yer_d);
                        pst.executeUpdate();
                        txtarea = txtarea + "Turno " + turno +": Enviaste 1 Yerba a " + ciudad_destino + "\n";
                    } else {
                    }
                }
                cn.close();
            } catch (SQLException e) {
                System.err.println("Error al gastar recursos al intercambiar: " + e);
            }

        } else {
            JOptionPane.showMessageDialog(null, "El juego está en pausa");
        }
        cab_env = 0;
        vac_env = 0;
        hie_env = 0;
        vin_env = 0;
        yer_env = 0;

        jTextArea_Intercambio.setText(txtarea);
        ActualizarDatos();

    }//GEN-LAST:event_jButton_EnviarActionPerformed

    private void jButton_ActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarActionPerformed

        ActualizarDatos();

    }//GEN-LAST:event_jButton_ActualizarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gobernador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gobernador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gobernador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gobernador.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gobernador().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_Ciudad_Destino;
    private javax.swing.JComboBox<String> cmb_actores;
    private javax.swing.JComboBox<String> cmb_cab;
    private javax.swing.JComboBox<String> cmb_hie;
    private javax.swing.JComboBox<String> cmb_vac;
    private javax.swing.JComboBox<String> cmb_vin;
    private javax.swing.JComboBox<String> cmb_yer;
    private javax.swing.JButton jButton_Actualizar;
    private javax.swing.JButton jButton_Enviar;
    private javax.swing.JButton jButton_Estatus;
    private javax.swing.JButton jButton_Industria;
    private javax.swing.JButton jButton_Intriga;
    private javax.swing.JButton jButton_MisionComercial;
    private javax.swing.JButton jButton_Oficiales;
    private javax.swing.JButton jButton_Unidades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Turno;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea_CheetSheet;
    private javax.swing.JTextArea jTextArea_Intercambio;
    private javax.swing.JTextField txtField_Caballos;
    private javax.swing.JTextField txtField_Ciudad;
    private javax.swing.JTextField txtField_Estatus;
    private javax.swing.JTextField txtField_Hierro;
    private javax.swing.JTextField txtField_Industria;
    private javax.swing.JTextField txtField_Intriga;
    private javax.swing.JTextField txtField_MisionComercial;
    private javax.swing.JTextField txtField_Oficiales;
    private javax.swing.JTextField txtField_UnidadesReclutadas;
    private javax.swing.JTextField txtField_Vacas;
    private javax.swing.JTextField txtField_Vino;
    private javax.swing.JTextField txtField_Yerba;
    // End of variables declaration//GEN-END:variables

    void ActualizarDatos() {
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from gobernadores where Ciudad = '" + ciudad + "'");
            ResultSet rs = pst.executeQuery();

            if (rs.next()) {
                txtField_Ciudad.setText(ciudad);
                txtField_Estatus.setText(rs.getString("Estatus"));
                txtField_Caballos.setText(rs.getString("Caballos"));
                txtField_Vacas.setText(rs.getString("Vacas"));
                txtField_Hierro.setText(rs.getString("Hierro"));
                txtField_Vino.setText(rs.getString("Vino"));
                txtField_Yerba.setText(rs.getString("Yerba"));
                txtField_Industria.setText(rs.getString("Nivel_de_Industria"));
                txtField_MisionComercial.setText(rs.getString("Nivel_de_Mision_Comercial"));
                txtField_UnidadesReclutadas.setText(rs.getString("Unidades_Reclutadas"));
                txtField_Oficiales.setText(rs.getString("Oficiales_Reclutados"));
                
            }

            Connection cn2 = Conexion.conectar();
            PreparedStatement pst2 = cn2.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs2 = pst2.executeQuery();

            while (rs2.next()) {
                jLabel_Turno.setText("Turno " + rs2.getString("Turno"));
                estatus_minimo = rs2.getInt("Estatus_Industria");
                jTextArea_CheetSheet.setText("Para crecer y mejorar en 1 el ESTATUS de tu ciudad, debés elegir un\n" +
                    "Actor Político en el cual apoyarte. "+ActorPolitico1+" te cobrará 1\n" +
                    "recurso, "+ActorPolitico2+" te cobrará 2 recursos diferentes y el Gobierno\n" +
                    "Nacional te cobrará 3 recursos diferentes.\n" +
                    "\n" +
                    "Para aumentar el Nivel de tu INDUSTRIA, tenés que alcanzar primero un\n" +
                    "Estatus de nivel " + estatus_minimo + ", y luego invertir 2 recursos diferentes en ello. En\n" +
                    "cada turno siguiente recibirás 2 recursos de tu producción en lugar\n" +
                    "de 1.\n" +
                    "\n" +
                    "Para aumentar el Nivel de tu MISIÓN COMERCIAL, tenés que invertir\n" +
                    "1 recurso cualquiera. El nivel de la misión no puede ser mayor al de tu\n" +
                    "estatus. En caso de disputa civil por un recurso del mapa (es decir: si \n" +
                    "no hay ejércitos que intervengan), la misión comercial de mayor nivel\n" +
                    "consigue el recurso.\n" +
                    "\n" +
                    "Para reclutar UNIDADES debes invertir 1 recurso. Tu capitán recibirá 3\n" +
                    "unidades. Las unidades le permitirán mantenerse en campaña. \n" +
                    "\n" +
                    "Para reclutar OFICIALES de nivel 2, debés invertir 2 recursos diferentes.\n" +
                    "Para reclutar oficiales de nivel 3, debés invertir 3 recursos diferentes.");
            }
            cn2.close();

            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar textfields: " + e);
        }
    }

}
