
package interfaces;
import java.sql.*;
import conexion.Conexion;
import static interfaces.ControlMapa.model;
import java.awt.Image;
import java.awt.Toolkit;
import javax.swing.JOptionPane;
import javax.swing.JTable;

public class Capitan extends javax.swing.JFrame {
    String usuario = LogIn.usuario;
    String ciudad = LogIn.ciudad;
    int fase, turno;
    
   
    public Capitan() {
        initComponents();
        setSize(800,350);
        setResizable(false);
        setLocationRelativeTo(null);
        setTitle("Capitán " +usuario + " de la Ciudad de " + ciudad);
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from capitanes");
            ResultSet rs = pst.executeQuery();

            jTable_UltimosMovimientos = new JTable(model);
            jScrollPane_UltimosMovimientos.setViewportView(jTable_UltimosMovimientos);

            model.addColumn("Ciudad");
            model.addColumn("Fase Militar 1");
            model.addColumn("Destino FM1");
            model.addColumn("Fase Comercial");
            model.addColumn("Fase Militar 2");
            model.addColumn("Destino FM2");

            while (rs.next()) {
                Object[] fila = new Object[6];

                for (int i = 0; i < 6; i++) {
                    fila[0] = rs.getObject("Ciudad");
                    fila[1] = rs.getObject("Fase_Militar_1");
                    fila[2] = rs.getObject("Destino_FM1");
                    fila[3] = rs.getObject("Destino_FC");
                    fila[4] = rs.getObject("Fase_Militar_2");
                    fila[5] = rs.getObject("Destino_FM2");
                }
                model.addRow(fila);
            }
            cn.close();
            
        } catch (SQLException e) {
            System.err.println("Error al actualizar tabla de movimientos" + e);
        }
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                turno = rs.getInt("Turno");
            }
            cn.close();
            
        } catch (SQLException e) {
            System.err.println("Error al actualizar turno" + e);
        }
        jLabel_Turno.setText("Turno " + turno);
        
    }
    
    @Override
    public Image getIconImage(){
        Image retValue = Toolkit.getDefaultToolkit().getImage(ClassLoader.getSystemResource("img/IconoAsistenteIndependencia.png"));
        return retValue;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Titulo = new javax.swing.JLabel();
        jScrollPane_UltimosMovimientos = new javax.swing.JScrollPane();
        jTable_UltimosMovimientos = new javax.swing.JTable();
        cmb_FaseMilitar1 = new javax.swing.JComboBox<>();
        cmb_Destino = new javax.swing.JComboBox<>();
        jButton_Enviar = new javax.swing.JButton();
        jButton_ActualizarTabla = new javax.swing.JButton();
        jLabel_Turno = new javax.swing.JLabel();
        cmb_FaseMiliar2 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImage(getIconImage());
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel_Titulo.setText("Independencia: el Megajuego!");
        getContentPane().add(jLabel_Titulo, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 10, -1, -1));

        jTable_UltimosMovimientos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane_UltimosMovimientos.setViewportView(jTable_UltimosMovimientos);

        getContentPane().add(jScrollPane_UltimosMovimientos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, 190));

        cmb_FaseMilitar1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Avanzar y atacar todo", "Avanzar y detenerse si...", "Acompañar al ejército de:" }));
        getContentPane().add(cmb_FaseMilitar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, -1, -1));

        cmb_Destino.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Arequipa", "Asunción", "Buenos Aires", "Catamarca", "Chuquisaca", "Cochabamba", "Concepción (Chile)", "Concepción del Uruguay", "Copiapó", "Coquimbo", "Córdoba", "Corrientes", "Europa", "La Paz", "La Rioja", "Mendoza", "Misiones", "Montevideo", "Pergamino", "Porto Alegre", "Potosí", "Río Cuarto", "Salta", "San Bernardo de Tarija", "San Borja", "San Juan", "San Luis", "San Salvador de Jujuy", "Santa Fé", "Santiago (Chile)", "Santiago del Estero", "Suipacha", "Tacuarembó", "Talca", "Tucumán", "Valparaíso" }));
        cmb_Destino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_DestinoActionPerformed(evt);
            }
        });
        getContentPane().add(cmb_Destino, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 250, -1, -1));

        jButton_Enviar.setText("Enviar");
        jButton_Enviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_EnviarActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_Enviar, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 250, -1, -1));

        jButton_ActualizarTabla.setText("Actualizar Tabla");
        jButton_ActualizarTabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ActualizarTablaActionPerformed(evt);
            }
        });
        getContentPane().add(jButton_ActualizarTabla, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));
        getContentPane().add(jLabel_Turno, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 0, 80, 20));

        cmb_FaseMiliar2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Avanzar y atacar todo", "Avanzar y detenerse si...", "Acompañar al ejército de:", "Asaltar", "Sitiar", "Defensa (por la ciudad)" }));
        getContentPane().add(cmb_FaseMiliar2, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 250, -1, -1));

        jLabel2.setText("Fase Militar 1");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, 20));

        jLabel3.setText("Fase Comercial");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 230, -1, 20));

        jLabel4.setText("Fase Militar 2");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 230, -1, -1));

        jLabel5.setText("Destino");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 230, -1, -1));

        jLabel1.setText("Elegí Destino directamente");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 250, -1, 20));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_EnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_EnviarActionPerformed

        String AccionMilitar1 = cmb_FaseMilitar1.getSelectedItem().toString();
        String AccionMilitar2 = cmb_FaseMiliar2.getSelectedItem().toString();
        String Destino = cmb_Destino.getSelectedItem().toString();
        int fase = 0;
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                fase = rs.getInt("Fases_de_Mapa");
            }
            
            switch (fase) {
                case 1:
                    {
                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(
                                "update capitanes set Fase_Militar_1 = ?, Destino_FM1 = ? where Ciudad = '"+ciudad+"'");
                        pst2.setString(1, AccionMilitar1);
                        pst2.setString(2, Destino);
                        pst2.executeUpdate();
                        cn2.close();
                        JOptionPane.showMessageDialog(null, "Fase Militar 1. Orden Enviada");
                        break;
                    }
                case 2:
                    {
                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(
                                "update capitanes set Destino_FC = ? where Ciudad = '"+ciudad+"'");
                        pst2.setString(1, Destino);
                        pst2.executeUpdate();
                        cn2.close();
                        JOptionPane.showMessageDialog(null, "Fase Comercial. Orden Enviada");
                        break;
                    }
                case 3:
                    {
                        Connection cn2 = Conexion.conectar();
                        PreparedStatement pst2 = cn2.prepareStatement(
                                "update capitanes set Fase_Militar_2 = ?, Destino_FM2 = ? where Ciudad = '"+ciudad+"'");
                        pst2.setString(1, AccionMilitar2);
                        pst2.setString(2, Destino);
                        pst2.executeUpdate();
                        cn2.close();
                        JOptionPane.showMessageDialog(null, "Fase Militar 2. Orden Enviada");
                        break;
                    }
                default:
                    JOptionPane.showMessageDialog(null, "Por ahora no hay ninguna fase activa para enviar movimientos");
                    break;
            }
            cn.close();
            
        } catch (SQLException e) {
            System.err.println("Error al enviar movimientos: " + e);
        }
        
    }//GEN-LAST:event_jButton_EnviarActionPerformed

    private void jButton_ActualizarTablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ActualizarTablaActionPerformed
        int BanderaActualizacion = 0;
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                BanderaActualizacion = rs.getInt("Bandera_Mapa_Actualizacion");
            }
            
            if(BanderaActualizacion == 1){
                Connection cn2 = Conexion.conectar();
                PreparedStatement pst2 = cn2.prepareStatement(
                    "select * from capitanes");
                ResultSet rs2 = pst2.executeQuery();
                
                while (rs2.next()) {
                    model.removeRow(0);
                    Object[] fila = new Object[6];
                
                    fila[0] = rs2.getObject("Ciudad");
                    fila[1] = rs2.getObject("Fase_Militar_1");
                    fila[2] = rs2.getObject("Destino_FM1");
                    fila[3] = rs2.getObject("Destino_FC");
                    fila[4] = rs2.getObject("Fase_Militar_2");
                    fila[5] = rs2.getObject("Destino_FM2");
                
                    model.addRow(fila);
                }
                cn2.close();
                
            } else {
                JOptionPane.showMessageDialog(null, "En este momento, no se puede actualizar la tabla");
            }
            cn.close();
            
        } catch (SQLException e) {
            System.err.println("Error al actualizar tabla de movimientos" + e);
        }
        
        //Actualizar turno
        
        try {
            Connection cn = Conexion.conectar();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from otros where ID = 1");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                turno = rs.getInt("Turno");
            }
            cn.close();
            
        } catch (SQLException e) {
            System.err.println("Error al actualizar turno" + e);
        }
        jLabel_Turno.setText("Turno " + turno);
    }//GEN-LAST:event_jButton_ActualizarTablaActionPerformed

    private void cmb_DestinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_DestinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_DestinoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Capitan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Capitan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Capitan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Capitan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Capitan().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmb_Destino;
    private javax.swing.JComboBox<String> cmb_FaseMiliar2;
    private javax.swing.JComboBox<String> cmb_FaseMilitar1;
    private javax.swing.JButton jButton_ActualizarTabla;
    private javax.swing.JButton jButton_Enviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel_Titulo;
    private javax.swing.JLabel jLabel_Turno;
    private javax.swing.JScrollPane jScrollPane_UltimosMovimientos;
    private javax.swing.JTable jTable_UltimosMovimientos;
    // End of variables declaration//GEN-END:variables
}
